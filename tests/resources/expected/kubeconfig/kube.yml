
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube1
spec:
  selector:
    matchLabels:
      run: kube1
  replicas: 2
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        run: kube1
    spec:
      containers:
        -
          name: kube1
          image: 'real.repository/kube1:v3.30.0'
          imagePullPolicy: Always
          env:
            -
              name: SOME_ENV
              valueFrom:
                configMapKeyRef:
                  name: transpiler
                  key: SOME_ENV_VALUE
            -
              name: SOME_ENV_COMPOSED
              value: thisis$(SOME_ENV_COMPOSED_VALUE)composed
            -
              name: SOME_SECRET_ENV
              valueFrom:
                secretKeyRef:
                  name: transpiler
                  key: SOME_SECRET_ENV_VALUE
            -
              name: SOME_SECRET_ENV_COMPOSED
              value: thisisalso$(SOME_SECRET_ENV_COMPOSED_VALUE)composed
          ports:
            -
              containerPort: 9000
          volumeMounts:
            -
              name: kube1-data
              mountPath: /data
        -
          name: kube2-merge-into-kube1
          image: 'real.repository/kube2:v1.0'
          imagePullPolicy: Always
          env:
            -
              name: SOME_ENV
              valueFrom:
                configMapKeyRef:
                  name: transpiler
                  key: SOME_ENV_VALUE_KUBE2
            -
              name: SOME_SECRET_ENV
              valueFrom:
                secretKeyRef:
                  name: transpiler
                  key: SOME_SECRET_ENV_KUBE2
          ports:
            -
              containerPort: 9000
            -
              containerPort: 8000
          volumeMounts:
            -
              name: kube2-merge-into-kube1-data
              mountPath: /data
      volumes:
        -
          name: kube1-data
          persistentVolumeClaim:
            claimName: kube1-data-claim
        -
          name: kube2-merge-into-kube1-data
          persistentVolumeClaim:
            claimName: kube2-merge-into-kube1-data-claim

---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: kube1
spec:
  lookupPolicy:
    local: false
  tags:
    -
      name: v3.30.0
      from:
        kind: DockerImage
        name: 'real.repository/kube1:v3.30.0'
    -
      name: v1.0
      from:
        kind: DockerImage
        name: 'real.repository/kube2:v1.0'

---
apiVersion: v1
kind: Service
metadata:
  name: kube1
  labels:
    run: kube1-svc
spec:
  selector:
    run: kube1
  ports:
    -
      port: 9000
      targetPort: 9000
      protocol: TCP
      name: ku9000
    -
      port: 9001
      targetPort: 9001
      protocol: TCP
      name: ku9001

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kube1-data-claim
spec:
  resources:
    requests:
      storage: 5Gi
  accessModes:
    - ReadWriteOnce

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kube2-merge-into-kube1-data-claim
spec:
  resources:
    requests:
      storage: 5Gi
  accessModes:
    - ReadWriteOnce

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: kube180
spec:
  host: kube1$(DOMAIN)
  port:
    targetPort: ku80
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  to:
    kind: Service
    name: kube1
    weight: 100
  wildcardPolicy: None
status:
  ingress:
    -
      conditions:
        -
          status: 'True'
          type: Admitted
      routerName: router
      wildcardPolicy: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube3
spec:
  selector:
    matchLabels:
      run: kube3
  replicas: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        run: kube3
    spec:
      containers:
        -
          name: kube3
          image: 'real.repository/kube3:latest'
          imagePullPolicy: Always
          volumeMounts:
            -
              name: kube3-data
              mountPath: /data
      volumes:
        -
          name: kube3-data
          persistentVolumeClaim:
            claimName: kube3-data-claim

---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: kube3
spec:
  lookupPolicy:
    local: false
  tags:
    -
      name: latest
      from:
        kind: DockerImage
        name: 'real.repository/kube3:latest'

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kube3-data-claim
spec:
  resources:
    requests:
      storage: 50Gi
  accessModes:
    - ReadWriteOnce
