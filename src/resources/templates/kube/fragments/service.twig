{% import "kube/macros.twig" as macros %}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ serviceName }}
  labels:
    run: {{ serviceName }}-svc
spec:
  selector:
    run: {{ serviceName }}
  ports:
{% for port in service._servicePorts %}
{% if port is iterable %}
    - port: {{ port.hostPort }}
      targetPort: {{ port.hostPort }}
      protocol: {{ port.protocol|default('TCP') }}
      name: {{ serviceName|slice(0, 2) }}{{ port.hostPort }}
{% else %}
    - port: {{ port }}
      targetPort: {{ port }}
      protocol: TCP
      name: {{ serviceName|slice(0, 2) }}{{ port }}
{% endif %}
{% endfor %}

{% if outputNetworkPoliciesForServicesWithLabel is defined %}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ serviceName }}
spec:
  podSelector:
    matchLabels:
      run: {{ serviceName }}
  policyTypes:
    - Ingress
  ingress:
    - from:
{% if networkPoliciesNamespaceSelectorLabel is defined %}

        - namespaceSelector:
            matchLabels:
{% for labelName, labelValue in networkPoliciesNamespaceSelectorLabel %}
              {{ labelName }}: {{ labelValue }}
{% endfor %}

{% endif %}

        - podSelector:
            matchLabels:
{% for labelName, labelValue in outputNetworkPoliciesForServicesWithLabel %}
              {{ labelName }}: {{ labelValue }}
{% endfor %}
      ports:
{% for port in service._servicePorts %}
{% if port is iterable %}
         - protocol: {{ port.protocol|default('TCP') }}
           port: {{ port.hostPort }}
{% else %}
         - protocol: TCP
           port: {{ port }}
{% endif %}
{% endfor %}

{% endif %}

